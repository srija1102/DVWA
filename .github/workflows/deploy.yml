name: Deploy DVWA with MySQL to EKS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install Checkov
        run: |
          pip install checkov

      - name: Run Checkov (IaC Security Scanner)
        run: |
          mkdir -p logs
          checkov -d kube/ -o json > logs/checkov.json || true

      - name: Run OWASP ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.9.0
        with:
          target: 'http://${{ secrets.LOAD_BALANCER_URL }}'
          cmd_options: '-J logs/zap_results.json'

      - name: Install Python dependencies
        run: |
          pip install scikit-learn pandas

      - name: Run AI Threat Classifier
        run: |
          python3 scripts/classify_threats.py

#      - name: Archive Security Scan Results
#        uses: actions/upload-artifact@v2.2.4
#        with:
#          name: security-logs
#          path: logs/

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} \
          | docker login --username AWS --password-stdin 911167907462.dkr.ecr.us-east-1.amazonaws.com/dvwa

      - name: Build and Push Docker image
        run: |
          IMAGE_URI=911167907462.dkr.ecr.us-east-1.amazonaws.com/dvwa:latest
          docker build -t $IMAGE_URI .
          docker push $IMAGE_URI

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Update kubeconfig for EKS
        run: |
          aws eks update-kubeconfig \
            --region ${{ secrets.AWS_REGION }} \
            --name ${{ secrets.EKS_CLUSTER_NAME }}

      - name: Deploy to EKS
        run: |
          echo "Deploying k8s manifests..."
          kubectl apply -f kube/ --validate=false

