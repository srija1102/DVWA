name: Secure AI-Driven CI/CD for DVWA on EKS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Run SonarQube Scanner (SAST)
        uses: sonarsource/sonarcloud-github-action@v2
        with:
          projectBaseDir: .
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Run Checkov for IaC scanning
        uses: bridgecrewio/checkov-action@v12
        with:
          directory: kube/

      - name: OWASP ZAP Baseline Scan (DAST)
        uses: zaproxy/action-baseline@v0.9.0
        with:
          target: 'http://your-app-url.com'

      - name: Run AI Threat Classifier
        run: |
          python3 scripts/classify_threats.py

      - name: Archive Security Scan Results
        uses: actions/upload-artifact@v3.1.2
        with:
          name: security-logs
          path: logs/

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} \
          | docker login --username AWS --password-stdin 911167907462.dkr.ecr.us-east-1.amazonaws.com/dvwa

      - name: Build and Push Docker image
        run: |
          IMAGE_URI=911167907462.dkr.ecr.us-east-1.amazonaws.com/dvwa:latest
          docker build -t $IMAGE_URI .
          docker push $IMAGE_URI

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Update kubeconfig for EKS
        run: |
          aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name ${{ secrets.EKS_CLUSTER_NAME }}

      - name: Deploy to EKS
        run: |
          kubectl apply -f kube/

